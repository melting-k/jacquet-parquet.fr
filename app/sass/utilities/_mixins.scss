@use 'sass:meta';
@use 'sass:math';

// ***** Display flex/inline-flex

@mixin flex($display:flex,$align:center,$justify:flex-start,$direction:row,$wrap:wrap) {
    
    display:$display;
    align-items:$align;
    justify-content: $justify;
    flex-direction: $direction;
    flex-wrap: $wrap;
    
    &:after,
    &:before {
        content:normal;
        display: none;
    }
    
}

// ***** Position (absolute / fixed / relative)

@mixin position($position,$index:1,$top:auto,$right:auto,$bottom:auto,$left:auto) {
    
    position:$position;
    top:$top;
    bottom:$bottom;
    left:$left;
    right:$right;
    z-index:$index;
    
}

// ***** Transition

@mixin transi($duration:.25s,$easing:ease-out,$delay:0s,$property:all) {
    
    transition-property: $property;
    transition-duration: $duration;
    transition-timing-function: $easing;
    transition-delay: $delay;
    
}

// ***** Icons (Icomoon)

@mixin icon($taille) {
    
    display:inline-flex;
    align-items:center;
    justify-content:center;
    width:$taille; 
    height:$taille;
    
}

// ***** Fluid Font Size

@function strip-unit($number) {
    
    @if meta.type-of($number)=='number' and not math.is-unitless($number) {
        @return math.div($number, $number * 0 + 1);
    }
    @return $number;
    
}

@mixin fluid-text($min-font-size, $max-font-size, $break-start:360px, $break-end:1920px) {
    
    $fsm: calc((strip-unit($max-font-size) - strip-unit($min-font-size)) / (strip-unit($break-end) - strip-unit($break-start)));
    $fsb: #{$min-font-size - $fsm * $break-start};
    $fsmx: #{$fsm * 100vw};

    font-size: #{$min-font-size};
    
    @media (min-width: #{$break-start}) {
        font-size: calc(#{$fsmx} + #{$fsb});
    }
    
    @media (min-width: $break-end) {
        font-size: #{$max-font-size};
    }
    
}

// ***** SVG

@mixin svg($color, $color-hover : $color) {
    @include transi();

    path,
    rect,
    circle,
    polygon {
        fill:$color;
        @include transi();
    }

    &:hover {
        path,
        rect,
        circle,
        polygon {
            fill:$color-hover;
        }

    }
}